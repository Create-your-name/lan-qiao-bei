	%运算符 参与运算的量都为整型
	exit(0)的意思指的是正常状态bai退出
	指针是用来存放地址的变量
	%s 输入一个字符串 遇到空格会结束输入
	auto：函数中的局部变量，动态分配存储空间 调用函数时系统分配空间  调用结束 自动释放空间
	register ：局部变量放在CPU的寄存器   寄存器变量 
	extern 外部变量 函数外部顶柜  ！！ 作用域从定义变量到程序文件末尾 ! !
	static 静态局部变量 静态存储区内分配存储单元 整个程序运行期间不释放
	>> 二进制右移符号  <<二进制左移符号
	top位栈顶指针 第一个元素进栈 top=m 第二个进栈为0-1

	循环链表是线性结构 有且只有一个根节点 一个前驱一个后续 表头为根 链表末为叶子节点 
	（非空循环链表  既有根结点也有叶子节点）

	白盒测试 根据程序内部逻辑来设计测试用例

	Y->X X->A 则 Y->A为传递依赖
	C语言除了main函数其他模块都不能单独运行

	定义结构体 为{
	struct 结构名{
	成员列表； }	
	} struct  结构名 变量1 变量2；
	定义结构体 为{
	
	struct 结构名{
	成员列表； }	
	} 变量名列表；
	struct{
	成员列表； }	
	} 变量名列表；

 	E-R图是实体联系模型
	虚拟存储器是对主存的逻辑扩展 取决于计算机的访存能力
	front指向排头元素的前一个位置  rear指向队尾	
	数据流图是系统逻辑模型的图形表示 刻画数据流从输入刀输出的变化过程 	作用是支持软件系统功能建模
	数据的三种模式中 可以有多个外模式，概念模式和内模式只能有一个
	print 都右对齐
 	不能直接将字符串赋值给数组名  不能将两个字符数组直接互相赋值  必须指定长度或直接初始化
	typedef 原类型名 新类型名
	地址重定位建立在用户程序与物理地址之间的对应关系 实现方法为静态。动态地址重定位。
	（	静态地址重定位是在程序执行钱装入程序，程序必须占用连续的内存空间。	）
	动态地址重定位在程序执行期间进行，由专门的硬件机构来完成。通常采用一个重定位寄存器。将重定位寄存器的内容形成物理地址，动态地址重定位的有点是不要求程序装入固定的内存空间
	宏定义  可以先不带入数字....
	直接寻址 指令的地址码给出的是操作数的真正地址 
	间接寻址是相当于直接寻址而言 		地址吗给出的是，操作数地址的地址
	树形结构表示实体及其之间联系的模型为层次结构
	网状结构表示实体及其之间的联系模型
	关系模型采用二维表来表示关系